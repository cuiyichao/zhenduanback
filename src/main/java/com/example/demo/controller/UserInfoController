package com.example.demo.controller;

import com.example.demo.service.UserInfoService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/api")
public class UserInfoController {

    private static final Logger logger = LoggerFactory.getLogger(UserInfoController.class);

    @Autowired
    private UserInfoService userInfoService;

    /**
     * 根据环境和 cardnumber 获取 utoken
     * @param env 环境信息
     * @param cardnumber 卡号
     * @return 包含结果信息和 utoken 的 Map
     */
    @GetMapping("/getUtokenByCard")
    public Map<String, Object> getUtokenByCard(@RequestParam String env, @RequestParam String cardnumber) {
        Map<String, Object> result = new HashMap<>();
        try {
            logger.info("Received env: {}, cardnumber: {}", env, cardnumber);
            String utoken = userInfoService.getUtokenByCard(env, cardnumber);
            result.put("success", true);
            result.put("utoken", utoken);
            logger.info("Successfully generated utoken: {}", utoken);
        } catch (Exception e) {
            result.put("success", false);
            result.put("message", e.getMessage());
            logger.error("Failed to generate utoken: {}", e.getMessage(), e);
        }
        return result;
    }

    /**
     * 根据环境和 cardnumber 获取用户信息
     * @param env 环境信息
     * @param cardnumber 学员编号
     * @return 包含用户信息的 Map
     */
    @GetMapping("/getUserInfoByCard")
    public Map<String, Object> getUserInfoByCard(@RequestParam String env, @RequestParam String cardnumber) {
        Map<String, Object> result = new HashMap<>();
        try {
            logger.info("Received env: {}, cardnumber: {}", env, cardnumber);
            Map<String, Object> userInfo = userInfoService.getUserInfoByCard(env, cardnumber);
            result.put("success", true);
            result.put("data", userInfo);
            logger.info("Successfully retrieved user info: {}", userInfo);
        } catch (Exception e) {
            result.put("success", false);
            result.put("message", e.getMessage());
            logger.error("Failed to retrieve user info: {}", e.getMessage(), e);
        }
        return result;
    }
}
